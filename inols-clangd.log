






Started logging.

>>>
Content-Length: 3102

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":21140,"clientInfo":{"name":"vscode","version":"1.80.0"},"rootPath":"C:\\Users\\рс\\AppData\\Local\\Temp\\arduino-language-server3413025801\\build\\sketch","rootUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Arduino_GitHub/Termometer","name":"Termometer"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1101

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}}}Content-Length: 317

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/.clangd"}}Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 1106

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'OneWire'","range":{"end":{"character":7,"line":13},"start":{"character":0,"line":13}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'DallasTemperature'","range":{"end":{"character":17,"line":14},"start":{"character":0,"line":14}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 218

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1282

{"id":"3","jsonrpc":"2.0","result":[{"detail":"int","kind":13,"name":"oneWire","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}},{"detail":"int","kind":13,"name":"sensors","range":{"end":{"character":25,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":25,"line":14},"start":{"character":18,"line":14}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 218

{"jsonrpc":"2.0","id":"4","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1282

{"id":"4","jsonrpc":"2.0","result":[{"detail":"int","kind":13,"name":"oneWire","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}},{"detail":"int","kind":13,"name":"sensors","range":{"end":{"character":25,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":25,"line":14},"start":{"character":18,"line":14}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":"5","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"5","jsonrpc":"2.0","result":[]}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"}}}Content-Length: 1105

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}]}}Content-Length: 247

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"position":{"line":28,"character":42}}}
<<<
Content-Length: 40

{"id":"6","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":24}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":24}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 60

{"jsonrpc":"2.0","id":"9","method":"shutdown","params":null}
<<<
Content-Length: 40

{"id":"9","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3102

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":21140,"clientInfo":{"name":"vscode","version":"1.80.0"},"rootPath":"C:\\Users\\рс\\AppData\\Local\\Temp\\arduino-language-server3399030946\\build\\sketch","rootUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Arduino_GitHub/Termometer","name":"Termometer"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1101

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}}}Content-Length: 317

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/.clangd"}}Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 699

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":19}}}
<<<
Content-Length: 226

{"id":"3","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ONE_WIRE_BUS`  \n\n---\n```cpp\n#define ONE_WIRE_BUS 2\n```"},"range":{"end":{"character":20,"line":11},"start":{"character":8,"line":11}}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":11}}}
<<<
Content-Length: 211

{"id":"4","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `DallasTemperature.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\DallasTemperature.h\n```"}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":26}}}
<<<
Content-Length: 227

{"id":"5","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ONE_WIRE_BUS`  \n\n---\n```cpp\n#define ONE_WIRE_BUS 2\n```"},"range":{"end":{"character":28,"line":13},"start":{"character":16,"line":13}}}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"}}}Content-Length: 1105

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}]}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":20}}}
<<<
Content-Length: 227

{"id":"6","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ONE_WIRE_BUS`  \n\n---\n```cpp\n#define ONE_WIRE_BUS 2\n```"},"range":{"end":{"character":28,"line":13},"start":{"character":16,"line":13}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":21}}}
<<<
Content-Length: 227

{"id":"7","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ONE_WIRE_BUS`  \n\n---\n```cpp\n#define ONE_WIRE_BUS 2\n```"},"range":{"end":{"character":28,"line":13},"start":{"character":16,"line":13}}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":3,"character":3}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":2,"character":0}}}
<<<
Content-Length: 40

{"id":"9","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":2,"character":0}}}
<<<
Content-Length: 41

{"id":"10","jsonrpc":"2.0","result":null}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"11","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":35,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"11","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"12","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"12","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":29,"character":20}}}
<<<
Content-Length: 41

{"id":"13","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":19}}}
<<<
Content-Length: 292

{"id":"14","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `temperatureC`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat temperatureC = sensors.getTempCByIndex(0)\n```"},"range":{"end":{"character":27,"line":30},"start":{"character":15,"line":30}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":17}}}
<<<
Content-Length: 292

{"id":"15","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `temperatureC`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat temperatureC = sensors.getTempCByIndex(0)\n```"},"range":{"end":{"character":27,"line":30},"start":{"character":15,"line":30}}}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"16","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":26,"character":13},"end":{"line":26,"character":13}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"16","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"17","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":24,"character":1},"end":{"line":24,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"17","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"18","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":18}}}
<<<
Content-Length: 212

{"id":"18","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `DallasTemperature.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\DallasTemperature.h\n```"}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"19","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":2,"character":0}}}
<<<
Content-Length: 41

{"id":"19","jsonrpc":"2.0","result":null}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"20","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":35,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"20","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"21","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"21","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"22","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":29,"character":13}}}
<<<
Content-Length: 41

{"id":"22","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"23","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":13}}}
<<<
Content-Length: 41

{"id":"23","jsonrpc":"2.0","result":null}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"24","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":32,"character":14},"end":{"line":32,"character":14}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"24","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 61

{"jsonrpc":"2.0","id":"25","method":"shutdown","params":null}
<<<
Content-Length: 41

{"id":"25","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3100

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":33868,"clientInfo":{"name":"vscode","version":"1.80.0"},"rootPath":"C:\\Users\\рс\\AppData\\Local\\Temp\\arduino-language-server126403308\\build\\sketch","rootUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Arduino_GitHub/Termometer","name":"Termometer"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1100

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}}}Content-Length: 320

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":32,"character":14},"end":{"line":32,"character":14}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/.clangd"}}Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 698

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 258

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":25}}}
<<<
Content-Length: 38

{"id":"3","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"4","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":12,"character":25},"end":{"line":12,"character":25}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"4","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":21,"character":16}}}
<<<
Content-Length: 40

{"id":"5","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":16,"character":16}}}
<<<
Content-Length: 40

{"id":"6","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":26}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":27}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":8,"character":12}}}
<<<
Content-Length: 181

{"id":"9","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":8,"character":0}}}
<<<
Content-Length: 182

{"id":"10","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":8,"character":1}}}
<<<
Content-Length: 182

{"id":"11","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":2}}}
<<<
Content-Length: 41

{"id":"12","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":3}}}
<<<
Content-Length: 41

{"id":"13","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":0}}}
<<<
Content-Length: 41

{"id":"14","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":0}}}
<<<
Content-Length: 41

{"id":"15","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":1}}}
<<<
Content-Length: 41

{"id":"16","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"17","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":15,"character":7}}}
<<<
Content-Length: 41

{"id":"17","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"18","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":15,"character":8}}}
<<<
Content-Length: 41

{"id":"18","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"19","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":15,"character":6}}}
<<<
Content-Length: 41

{"id":"19","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"20","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":0}}}
<<<
Content-Length: 41

{"id":"20","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"21","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":0}}}
<<<
Content-Length: 41

{"id":"21","jsonrpc":"2.0","result":null}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"22","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":10,"character":0},"end":{"line":29,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"22","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"23","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":10,"character":0},"end":{"line":28,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"23","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"24","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":22,"character":12}}}
<<<
Content-Length: 311

{"id":"24","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long`\n\n---\n```cpp\n// In Serial_\npublic: void begin(unsigned long)\n```"},"range":{"end":{"character":14,"line":22},"start":{"character":9,"line":22}}}}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3102

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":33868,"clientInfo":{"name":"vscode","version":"1.80.0"},"rootPath":"C:\\Users\\рс\\AppData\\Local\\Temp\\arduino-language-server2510331829\\build\\sketch","rootUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Arduino_GitHub/Termometer","name":"Termometer"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1101

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}}}Content-Length: 319

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/.clangd"}}Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 699

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":18}}}
<<<
Content-Length: 291

{"id":"3","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `temperatureC`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat temperatureC = sensors.getTempCByIndex(0)\n```"},"range":{"end":{"character":27,"line":30},"start":{"character":15,"line":30}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":29}}}
<<<
Content-Length: 40

{"id":"4","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":27}}}
<<<
Content-Length: 40

{"id":"5","jsonrpc":"2.0","result":null}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":23}}}
<<<
Content-Length: 291

{"id":"6","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `temperatureC`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat temperatureC = sensors.getTempCByIndex(0)\n```"},"range":{"end":{"character":27,"line":30},"start":{"character":15,"line":30}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":31,"character":21}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":31,"character":22}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":31,"character":22}}}
<<<
Content-Length: 40

{"id":"9","jsonrpc":"2.0","result":null}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"10","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1301

{"id":"10","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"oneWire","range":{"end":{"character":29,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}},{"detail":"DallasTemperature","kind":13,"name":"sensors","range":{"end":{"character":35,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":25,"line":14},"start":{"character":18,"line":14}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"11","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1301

{"id":"11","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"oneWire","range":{"end":{"character":29,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}},{"detail":"DallasTemperature","kind":13,"name":"sensors","range":{"end":{"character":35,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":25,"line":14},"start":{"character":18,"line":14}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 3839

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":34,"character":0}},"text":"#include \"OneWire.h\"\r\n \r\n// OneWire DS18S20, DS18B20, DS1822 Temperature Example\r\n//\r\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\r\n//\r\n// The DallasTemperature library can do all this work for you!\r\n// http://milesburton.com/Dallas_Temperature_Control_Library\r\n \r\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\r\n \r\nvoid setup(void) {\r\n  Serial.begin(9600);\r\n}\r\n \r\nvoid loop(void) {\r\n  byte i;\r\n  byte present = 0;\r\n  byte type_s;\r\n  byte data[12];\r\n  byte addr[8];\r\n  float celsius, fahrenheit;\r\n   \r\n  if ( !ds.search(addr)) {\r\n    Serial.println(\"No more addresses.\");\r\n    Serial.println();\r\n    ds.reset_search();\r\n    delay(250);\r\n    return;\r\n  }\r\n   \r\n  Serial.print(\"ROM =\");\r\n  for( i = 0; i \u003c 8; i++) {\r\n    Serial.write(' ');\r\n    Serial.print(addr[i], HEX);\r\n  }\r\n \r\n  if (OneWire::crc8(addr, 7) != addr[7]) {\r\n      Serial.println(\"CRC is not valid!\");\r\n      return;\r\n  }\r\n  Serial.println();\r\n  \r\n  // the first ROM byte indicates which chip\r\n  switch (addr[0]) {\r\n    case 0x10:\r\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\r\n      type_s = 1;\r\n      break;\r\n    case 0x28:\r\n      Serial.println(\"  Chip = DS18B20\");\r\n      type_s = 0;\r\n      break;\r\n    case 0x22:\r\n      Serial.println(\"  Chip = DS1822\");\r\n      type_s = 0;\r\n      break;\r\n    default:\r\n      Serial.println(\"Device is not a DS18x20 family device.\");\r\n      return;\r\n  } \r\n \r\n  ds.reset();\r\n  ds.select(addr);\r\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\r\n   \r\n  delay(1000);     // maybe 750ms is enough, maybe not\r\n  // we might do a ds.depower() here, but the reset will take care of it.\r\n   \r\n  present = ds.reset();\r\n  ds.select(addr);    \r\n  ds.write(0xBE);         // Read Scratchpad\r\n \r\n  Serial.print(\"  Data = \");\r\n  Serial.print(present, HEX);\r\n  Serial.print(\" \");\r\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\r\n    data[i] = ds.read();\r\n    Serial.print(data[i], HEX);\r\n    Serial.print(\" \");\r\n  }\r\n  Serial.print(\" CRC=\");\r\n  Serial.print(OneWire::crc8(data, 8), HEX);\r\n  Serial.println();\r\n \r\n  // Convert the data to actual temperature\r\n  // because the result is a 16 bit signed integer, it should\r\n  // be stored to an \"int16_t\" type, which is always 16 bits\r\n  // even when compiled on a 32 bit processor.\r\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\r\n  if (type_s) {\r\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\r\n    if (data[7] == 0x10) {\r\n      // \"count remain\" gives full 12 bit resolution\r\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\r\n    }\r\n  } else {\r\n    byte cfg = (data[4] \u0026 0x60);\r\n    // at lower res, the low bits are undefined, so let's zero them\r\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\r\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\r\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\r\n    //// default is 12 bit resolution, 750 ms conversion time\r\n  }\r\n  celsius = (float)raw / 16.0;\r\n  fahrenheit = celsius * 1.8 + 32.0;\r\n  Serial.print(\"  Temperature = \");\r\n  Serial.print(celsius);\r\n  Serial.print(\" Celsius, \");\r\n  Serial.print(fahrenheit);\r\n  Serial.println(\" Fahrenheit\");\r\n}\r\nТеги:\r\n\r\n    Arduino Термометр"}]}}
<<<
Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":123},"start":{"character":0,"line":123}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":123},"start":{"character":4,"line":123}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":2}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 4018

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#include \"OneWire.h\"\n \n// OneWire DS18S20, DS18B20, DS1822 Temperature Example\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// The DallasTemperature library can do all this work for you!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n \nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 25 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\nТеги:\n\n    Arduino Термометр\n\n"}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"12","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":3}}Content-Length: 1075

{"id":"12","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":130,"character":3},"end":{"line":130,"character":21}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"13","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"13","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":4}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"14","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"14","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":130,"character":2},"end":{"line":130,"character":3}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"15","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"15","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":5}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"16","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"16","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":130,"character":0},"end":{"line":130,"character":2}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"17","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1075

{"id":"17","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":6}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"18","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"18","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":129,"character":0},"end":{"line":130,"character":0}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"19","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"19","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":7}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"20","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"20","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":128,"character":5},"end":{"line":129,"character":0}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"21","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"21","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":8}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"22","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":128,"character":5},"end":{"line":128,"character":5}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"22","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"23","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"23","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":128,"character":4},"end":{"line":128,"character":5}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"24","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"24","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":130},"start":{"character":0,"line":130}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":9}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"25","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"25","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":128,"character":3},"end":{"line":128,"character":4}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"26","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"26","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1102

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Тег'","range":{"end":{"character":3,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":130},"start":{"character":0,"line":130}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":10}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"27","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"27","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":128,"character":2},"end":{"line":128,"character":3}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"28","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"28","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1100

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Те'","range":{"end":{"character":2,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":130},"start":{"character":0,"line":130}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":11}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"29","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"29","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":128,"character":1},"end":{"line":128,"character":2}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"30","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"30","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1098

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Т'","range":{"end":{"character":1,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":130},"start":{"character":0,"line":130}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":12}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"31","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":128,"character":1},"end":{"line":128,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"31","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"32","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"32","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":128,"character":0},"end":{"line":128,"character":1}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"33","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"33","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":13}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"34","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"34","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":127,"character":1},"end":{"line":128,"character":0}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"35","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"35","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":14}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"36","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":127,"character":1},"end":{"line":127,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"36","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"37","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":110,"character":34}}}
<<<
Content-Length: 255

{"id":"37","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `data`  \n\n---\nType: `byte[12]`  \n\n---\n```cpp\n// In loop\nbyte data[12]\n```"},"range":{"end":{"character":38,"line":110},"start":{"character":34,"line":110}}}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3972

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":15},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#include \"OneWire.h\"\n \n// OneWire DS18S20, DS18B20, DS1822 Temperature Example\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// The DallasTemperature library can do all this work for you!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n \nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 25 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":15}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"38","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":17,"character":53}}}
<<<
Content-Length: 41

{"id":"38","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"39","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":9}}}
<<<
Content-Length: 182

{"id":"39","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"40","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":0}}}
<<<
Content-Length: 182

{"id":"40","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"41","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":19}}}
<<<
Content-Length: 182

{"id":"41","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"42","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":2}}}
<<<
Content-Length: 182

{"id":"42","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"43","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":0}}}
<<<
Content-Length: 182

{"id":"43","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"44","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":0}}}
<<<
Content-Length: 182

{"id":"44","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"45","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":20}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"45","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"46","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"46","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":20}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"47","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"47","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"48","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"48","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":0}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":16}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"49","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":36}}}
<<<
Content-Length: 41

{"id":"49","jsonrpc":"2.0","result":null}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":17}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"50","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"50","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":11,"line":19},"start":{"character":9,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":10,"line":22},"start":{"character":5,"line":22}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":10,"line":26},"start":{"character":5,"line":26}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":126},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":1}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":18}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"51","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"51","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":11,"line":19},"start":{"character":9,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":10,"line":22},"start":{"character":5,"line":22}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":10,"line":26},"start":{"character":5,"line":26}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":126},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":0}},"text":""}]}}Content-Length: 248

{"jsonrpc":"2.0","id":"52","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":30}}}
<<<
Content-Length: 41

{"id":"52","jsonrpc":"2.0","result":null}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":19}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3945

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":20},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n// OneWire DS18S20, DS18B20, DS1822 Temperature Example\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// The DallasTemperature library can do all this work for you!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n \nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 19 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 23 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 19 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":20}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"53","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":14,"character":2}}}
<<<
Content-Length: 41

{"id":"53","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"54","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":0}}}
<<<
Content-Length: 41

{"id":"54","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"55","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":0}}}
<<<
Content-Length: 41

{"id":"55","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"56","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":1}}}
<<<
Content-Length: 41

{"id":"56","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"57","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":0}}}
<<<
Content-Length: 41

{"id":"57","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"58","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":0}}}
<<<
Content-Length: 41

{"id":"58","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"59","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":16,"character":60}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"59","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"60","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"60","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":11,"line":18},"start":{"character":9,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":27},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":10,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":9,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":16,"character":60}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"61","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"61","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":11,"line":13},"start":{"character":9,"line":13}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":120},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":21}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"62","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"62","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":11,"line":13},"start":{"character":9,"line":13}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":120},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":0}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":22}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"63","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"63","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":11,"line":12},"start":{"character":9,"line":12}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":119},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":1}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":23}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"64","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"64","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":11,"line":12},"start":{"character":9,"line":12}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":119},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":0}},"text":""}]}}Content-Length: 248

{"jsonrpc":"2.0","id":"65","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":17}}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":24}}Content-Length: 41

{"id":"65","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3699

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":25},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":4,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":25}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"66","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":73,"character":30}}}
<<<
Content-Length: 41

{"id":"66","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"67","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":111,"character":24}}}
<<<
Content-Length: 41

{"id":"67","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"68","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":113,"character":22}}}
<<<
Content-Length: 41

{"id":"68","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"69","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":108,"character":44}}}
<<<
Content-Length: 41

{"id":"69","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3699

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":26},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":5,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"70","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"70","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","id":"71","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":115,"character":29},"end":{"line":115,"character":29}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"71","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"72","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":108,"character":57}}}
<<<
Content-Length: 41

{"id":"72","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"73","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":105,"character":65}}}
<<<
Content-Length: 41

{"id":"73","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"74","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":12}}}
<<<
Content-Length: 212

{"id":"74","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `DallasTemperature.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\DallasTemperature.h\n```"}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"75","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":2,"character":0}}}
<<<
Content-Length: 41

{"id":"75","jsonrpc":"2.0","result":null}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"76","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":119,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"76","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"77","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":109,"character":39}}}
<<<
Content-Length: 41

{"id":"77","jsonrpc":"2.0","result":null}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"78","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":96,"character":41},"end":{"line":96,"character":41}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"78","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"79","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":101,"character":25}}}
<<<
Content-Length: 41

{"id":"79","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3699

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":27},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":6,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"80","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":98,"character":41}}}
<<<
Content-Length: 41

{"id":"80","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3699

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":28},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":7,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"81","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":105,"character":36}}}
<<<
Content-Length: 41

{"id":"81","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"82","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":105,"character":43}}}
<<<
Content-Length: 41

{"id":"82","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"83","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":105,"character":46}}}
<<<
Content-Length: 41

{"id":"83","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"84","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":105,"character":47}}}
<<<
Content-Length: 41

{"id":"84","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"85","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":106,"character":20}}}
<<<
Content-Length: 41

{"id":"85","jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"jsonrpc":"2.0","id":"86","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":106,"character":21}}}
<<<
Content-Length: 1120

{"id":"86","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":96},"start":{"character":10,"line":96}}},{"kind":3,"range":{"end":{"character":7,"line":98},"start":{"character":4,"line":98}}},{"kind":2,"range":{"end":{"character":13,"line":98},"start":{"character":10,"line":98}}},{"kind":3,"range":{"end":{"character":9,"line":101},"start":{"character":6,"line":101}}},{"kind":2,"range":{"end":{"character":16,"line":101},"start":{"character":13,"line":101}}},{"kind":3,"range":{"end":{"character":24,"line":106},"start":{"character":21,"line":106}}},{"kind":2,"range":{"end":{"character":30,"line":106},"start":{"character":27,"line":106}}},{"kind":3,"range":{"end":{"character":29,"line":107},"start":{"character":26,"line":107}}},{"kind":2,"range":{"end":{"character":35,"line":107},"start":{"character":32,"line":107}}},{"kind":3,"range":{"end":{"character":29,"line":108},"start":{"character":26,"line":108}}},{"kind":2,"range":{"end":{"character":35,"line":108},"start":{"character":32,"line":108}}},{"kind":2,"range":{"end":{"character":22,"line":111},"start":{"character":19,"line":111}}}]}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":"87","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":106,"character":21},"end":{"line":119,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"87","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","id":"88","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":111,"character":30},"end":{"line":111,"character":30}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"88","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"89","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":113,"character":34}}}
<<<
Content-Length: 41

{"id":"89","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"90","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":98,"character":35}}}
<<<
Content-Length: 41

{"id":"90","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"91","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":71,"character":27}}}
<<<
Content-Length: 41

{"id":"91","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"92","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":71,"character":27}}}
<<<
Content-Length: 41

{"id":"92","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"93","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":71,"character":26}}}
<<<
Content-Length: 41

{"id":"93","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"94","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":44,"character":29}}}
<<<
Content-Length: 41

{"id":"94","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"95","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":44,"character":10}}}
<<<
Content-Length: 216

{"id":"95","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":13,"line":44},"start":{"character":6,"line":44}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"96","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":32,"character":19}}}
<<<
Content-Length: 41

{"id":"96","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"97","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":32,"character":20}}}
<<<
Content-Length: 41

{"id":"97","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"98","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":32,"character":20}}}
<<<
Content-Length: 41

{"id":"98","jsonrpc":"2.0","result":null}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"99","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":26,"character":16},"end":{"line":26,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"99","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"100","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":31,"character":10}}}
<<<
Content-Length: 42

{"id":"100","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"101","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":28,"character":10}}}
<<<
Content-Length: 253

{"id":"101","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `celsius`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat celsius\n```"},"range":{"end":{"character":15,"line":28},"start":{"character":8,"line":28}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"102","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":32,"character":16}}}
<<<
Content-Length: 42

{"id":"102","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"103","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":31,"character":14}}}
<<<
Content-Length: 42

{"id":"103","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"104","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":7}}}
<<<
Content-Length: 42

{"id":"104","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"105","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":8}}}
<<<
Content-Length: 289

{"id":"105","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `ds`  \n\n---\nType: `class OneWire`  \non pin 10 (a 4.7K resistor is necessary)  \n\n---\n```cpp\nOneWire ds(10)\n```"},"range":{"end":{"character":10,"line":30},"start":{"character":8,"line":30}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"106","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":35,"character":11}}}
<<<
Content-Length: 42

{"id":"106","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"107","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"107","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"108","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"108","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":29}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"109","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"109","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"110","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"110","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":4}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"111","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"111","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":5,"line":37},"start":{"character":4,"line":37}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":30}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"112","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":37,"character":5},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"112","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"113","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":5}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"113","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"114","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"114","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":29,"character":3},"end":{"line":29,"character":3}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"115","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"115","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1086

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":29},"start":{"character":3,"line":29}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":30},"start":{"character":2,"line":30}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":31}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"116","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":29,"character":4},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"116","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"117","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"117","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":4}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"118","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"118","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":32}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"119","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":29,"character":5},"end":{"line":29,"character":5}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"119","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":"120","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":28,"character":28},"end":{"line":28,"character":28}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"120","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"121","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"121","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 332

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":28,"character":28},"end":{"line":28,"character":28}},"text":"\r\n  "}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"122","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"122","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":119},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":33}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"123","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":38,"character":5},"end":{"line":38,"character":5}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"123","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"124","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"124","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":119},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":38,"character":5},"end":{"line":38,"character":5}},"text":"\r\n   "},{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":2}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"125","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"125","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":120},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":35}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"126","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":43,"character":20}}}
<<<
Content-Length: 252

{"id":"126","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `addr`  \n\n---\nType: `byte[8]`  \n\n---\n```cpp\n// In loop\nbyte addr[8]\n```"},"range":{"end":{"character":21,"line":43},"start":{"character":17,"line":43}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"127","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":40,"character":7}}}
<<<
Content-Length: 255

{"id":"127","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":40},"start":{"character":2,"line":40}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"128","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":40,"character":7}}}
<<<
Content-Length: 255

{"id":"128","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":40},"start":{"character":2,"line":40}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"129","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":43,"character":31}}}
<<<
Content-Length: 42

{"id":"129","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3710

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":36},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":8,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":8,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":36}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"130","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"130","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":120},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":45,"character":1},"end":{"line":45,"character":1}},"text":"\r\n "},{"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":3}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"131","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"131","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":38}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"132","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"132","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 413

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":1}},"text":""},{"range":{"start":{"line":45,"character":1},"end":{"line":45,"character":1}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"133","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"133","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":47},"start":{"character":2,"line":47}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":40}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"134","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"134","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":45,"character":2},"end":{"line":45,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"135","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"135","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1086

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":47},"start":{"character":2,"line":47}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":41}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"136","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":45,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"136","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"137","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":45,"character":3},"end":{"line":45,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"137","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3711

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":42},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":9,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1086

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":47},"start":{"character":2,"line":47}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":42}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"138","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"138","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":0}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"139","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"139","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1279

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":39},"start":{"character":0,"line":39}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":45},"start":{"character":2,"line":45}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":47},"start":{"character":2,"line":47}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":43}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"140","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":39,"character":1},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"140","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"141","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"141","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":39,"character":1},"end":{"line":39,"character":1}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"142","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"142","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":44}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"143","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"143","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"144","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":48,"character":30}}}
<<<
Content-Length: 42

{"id":"144","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3713

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":45},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":10,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"145","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":51,"character":10}}}
<<<
Content-Length: 42

{"id":"145","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"146","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"146","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":2}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"147","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"147","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":8,"line":54},"start":{"character":2,"line":54}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":46}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"148","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"148","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"149","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"149","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1086

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":52},"start":{"character":3,"line":52}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":8,"line":54},"start":{"character":2,"line":54}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":47}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"150","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":52,"character":4},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"150","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"151","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"151","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"152","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"152","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":0}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"153","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"153","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1472

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":46}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":47},"start":{"character":2,"line":47}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":52},"start":{"character":3,"line":52}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":8,"line":54},"start":{"character":2,"line":54}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":48}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"154","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":46,"character":1},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"154","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"155","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"155","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":46,"character":1},"end":{"line":46,"character":1}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"156","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"156","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":49}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"157","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":46,"character":2},"end":{"line":46,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"157","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3717

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":50},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}Content-Length: 321

{"jsonrpc":"2.0","id":"158","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"158","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"159","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"159","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":121},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 330

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"text":"\r\n  "}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"160","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 112

{"id":11,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1076

{"id":"160","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":51}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"161","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":54,"character":33}}}
<<<
Content-Length: 42

{"id":"161","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"162","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":54,"character":34}}}
<<<
Content-Length: 42

{"id":"162","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3721

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":52},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":52}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"163","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":54,"character":35}}}
<<<
Content-Length: 42

{"id":"163","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"164","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":57,"character":38}}}
<<<
Content-Length: 42

{"id":"164","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"165","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":75,"character":41}}}
<<<
Content-Length: 42

{"id":"165","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"166","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":78,"character":43}}}
<<<
Content-Length: 42

{"id":"166","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"167","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":82,"character":32}}}
<<<
Content-Length: 42

{"id":"167","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"168","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":39}}}
<<<
Content-Length: 42

{"id":"168","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"169","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":90,"character":20}}}
<<<
Content-Length: 42

{"id":"169","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"170","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":90,"character":18}}}
<<<
Content-Length: 42

{"id":"170","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"171","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":18}}}
<<<
Content-Length: 254

{"id":"171","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `data`  \n\n---\nType: `byte[12]`  \n\n---\n```cpp\n// In loop\nbyte data[12]\n```"},"range":{"end":{"character":21,"line":89},"start":{"character":17,"line":89}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"172","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":18}}}
<<<
Content-Length: 254

{"id":"172","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `data`  \n\n---\nType: `byte[12]`  \n\n---\n```cpp\n// In loop\nbyte data[12]\n```"},"range":{"end":{"character":21,"line":89},"start":{"character":17,"line":89}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"173","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":18}}}
<<<
Content-Length: 254

{"id":"173","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `data`  \n\n---\nType: `byte[12]`  \n\n---\n```cpp\n// In loop\nbyte data[12]\n```"},"range":{"end":{"character":21,"line":89},"start":{"character":17,"line":89}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"174","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":90,"character":21}}}
<<<
Content-Length: 42

{"id":"174","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"175","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":93,"character":25}}}
<<<
Content-Length: 464

{"id":"175","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### static-method `crc8`  \n\n---\n→ `uint8_t`  \nParameters:  \n- `const uint8_t * addr`\n- `uint8_t len`\n\nCompute a Dallas Semiconductor 8 bit CRC, these are used in the ROM and scratchpad registers.  \n\n---\n```cpp\n// In OneWire\npublic: static uint8_t crc8(const uint8_t *addr, uint8_t len)\n```"},"range":{"end":{"character":28,"line":93},"start":{"character":24,"line":93}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"176","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":19}}}
<<<
Content-Length: 42

{"id":"176","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"177","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":93,"character":19}}}
<<<
Content-Length: 218

{"id":"177","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":22,"line":93},"start":{"character":15,"line":93}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"178","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":14}}}
<<<
Content-Length: 42

{"id":"178","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"179","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":84,"character":10}}}
<<<
Content-Length: 42

{"id":"179","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"180","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":84,"character":10}}}
<<<
Content-Length: 42

{"id":"180","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"181","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":80,"character":7}}}
<<<
Content-Length: 269

{"id":"181","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `present`  \n\n---\nType: `byte`  \nValue = `0`  \n\n---\n```cpp\n// In loop\nbyte present = 0\n```"},"range":{"end":{"character":9,"line":80},"start":{"character":2,"line":80}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"182","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":80,"character":8}}}
<<<
Content-Length: 269

{"id":"182","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `present`  \n\n---\nType: `byte`  \nValue = `0`  \n\n---\n```cpp\n// In loop\nbyte present = 0\n```"},"range":{"end":{"character":9,"line":80},"start":{"character":2,"line":80}}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"183","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"183","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":79,"character":3},"end":{"line":79,"character":3}},"text":"\r\n   "},{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":2}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"184","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 112

{"id":12,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":12,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1076

{"id":"184","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":54}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"185","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":82,"character":10}}}
<<<
Content-Length: 391

{"id":"185","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `select`  \n\n---\n→ `void`  \nParameters:  \n- `const uint8_t * rom`\n\nIssue a 1-Wire rom select command, you do the reset first.  \n\n---\n```cpp\n// In OneWire\npublic: void select(const uint8_t rom[8])\n```"},"range":{"end":{"character":11,"line":82},"start":{"character":5,"line":82}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"186","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":82,"character":11}}}
<<<
Content-Length: 391

{"id":"186","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `select`  \n\n---\n→ `void`  \nParameters:  \n- `const uint8_t * rom`\n\nIssue a 1-Wire rom select command, you do the reset first.  \n\n---\n```cpp\n// In OneWire\npublic: void select(const uint8_t rom[8])\n```"},"range":{"end":{"character":11,"line":82},"start":{"character":5,"line":82}}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"187","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"187","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":80,"character":3},"end":{"line":80,"character":3}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"188","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"188","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":80},"start":{"character":3,"line":80}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":55}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"189","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":80,"character":4},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"189","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"190","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":80,"character":4},"end":{"line":80,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"190","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"191","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"191","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":80,"character":4},"end":{"line":80,"character":4}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"192","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"192","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1328

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unterminated_block_comment","message":"Unterminated /* comment","range":{"end":{"character":0,"line":124},"start":{"character":0,"line":124}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'","range":{"end":{"character":0,"line":124},"start":{"character":0,"line":124}},"relatedInformation":[{"location":{"range":{"end":{"character":17,"line":22},"start":{"character":16,"line":22}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"message":"To match this '{'"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":56}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"193","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":80,"character":5},"end":{"line":80,"character":5}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"193","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"194","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":90,"character":18}}}
<<<
Content-Length: 42

{"id":"194","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"195","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"195","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":96,"character":1},"end":{"line":96,"character":1}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"196","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 112

{"id":13,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1076

{"id":"196","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1328

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unterminated_block_comment","message":"Unterminated /* comment","range":{"end":{"character":0,"line":124},"start":{"character":0,"line":124}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'","range":{"end":{"character":0,"line":124},"start":{"character":0,"line":124}},"relatedInformation":[{"location":{"range":{"end":{"character":17,"line":22},"start":{"character":16,"line":22}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"message":"To match this '{'"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":57}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"197","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"197","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"198","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"198","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":58}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"199","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":96,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"199","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"200","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":96,"character":3},"end":{"line":96,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"200","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"201","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":97,"character":13}}}
<<<
Content-Length: 42

{"id":"201","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"202","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"202","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":123},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 329

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":96,"character":3},"end":{"line":96,"character":3}},"text":"\r\n "}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"203","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"203","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":59}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"204","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":93,"character":17}}}
<<<
Content-Length: 42

{"id":"204","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3731

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":60},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   /*\n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n */\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":14,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":14,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":60}}
>>>
Content-Length: 250

{"jsonrpc":"2.0","id":"205","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":113,"character":42}}}
<<<
Content-Length: 42

{"id":"205","jsonrpc":"2.0","result":null}
>>>
Content-Length: 250

{"jsonrpc":"2.0","id":"206","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":112,"character":38}}}
<<<
Content-Length: 42

{"id":"206","jsonrpc":"2.0","result":null}
>>>
Content-Length: 250

{"jsonrpc":"2.0","id":"207","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":114,"character":49}}}
<<<
Content-Length: 42

{"id":"207","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"208","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":25}}}
<<<
Content-Length: 42

{"id":"208","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"209","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":25}}}
<<<
Content-Length: 42

{"id":"209","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"210","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":23}}}
<<<
Content-Length: 42

{"id":"210","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"211","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":22}}}
<<<
Content-Length: 42

{"id":"211","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"212","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":88,"character":16}}}
<<<
Content-Length: 42

{"id":"212","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"213","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":91,"character":10}}}
<<<
Content-Length: 42

{"id":"213","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"214","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":81,"character":6}}}
<<<
Content-Length: 42

{"id":"214","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"215","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":80,"character":5},"end":{"line":80,"character":5}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"215","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"216","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":9}}}
<<<
Content-Length: 42

{"id":"216","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"217","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"217","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":97,"character":0},"end":{"line":97,"character":1}},"text":""},{"range":{"start":{"line":80,"character":4},"end":{"line":80,"character":5}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"218","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"218","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 3629

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":4,"line":80},"start":{"character":3,"line":80}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":96},"start":{"character":2,"line":96}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'int16_t': expected expression","range":{"end":{"character":9,"line":102},"start":{"character":2,"line":102}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":7,"line":104},"start":{"character":4,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":13,"line":104},"start":{"character":10,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":9,"line":107},"start":{"character":6,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":16,"line":107},"start":{"character":13,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":24,"line":112},"start":{"character":21,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":30,"line":112},"start":{"character":27,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":113},"start":{"character":26,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":113},"start":{"character":32,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":114},"start":{"character":26,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":114},"start":{"character":32,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":22,"line":117},"start":{"character":19,"line":117}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":62}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"219","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"219","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":80,"character":3},"end":{"line":80,"character":4}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"220","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"220","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 3436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":96},"start":{"character":2,"line":96}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'int16_t': expected expression","range":{"end":{"character":9,"line":102},"start":{"character":2,"line":102}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":7,"line":104},"start":{"character":4,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":13,"line":104},"start":{"character":10,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":9,"line":107},"start":{"character":6,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":16,"line":107},"start":{"character":13,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":24,"line":112},"start":{"character":21,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":30,"line":112},"start":{"character":27,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":113},"start":{"character":26,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":113},"start":{"character":32,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":114},"start":{"character":26,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":114},"start":{"character":32,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":22,"line":117},"start":{"character":19,"line":117}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":63}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"221","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":96,"character":3},"end":{"line":96,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"221","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"222","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"222","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":3}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"223","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"223","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 3243

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'int16_t': expected expression","range":{"end":{"character":9,"line":102},"start":{"character":2,"line":102}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":7,"line":104},"start":{"character":4,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":13,"line":104},"start":{"character":10,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":9,"line":107},"start":{"character":6,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":16,"line":107},"start":{"character":13,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":24,"line":112},"start":{"character":21,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":30,"line":112},"start":{"character":27,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":113},"start":{"character":26,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":113},"start":{"character":32,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":114},"start":{"character":26,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":114},"start":{"character":32,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":22,"line":117},"start":{"character":19,"line":117}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":64}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"224","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"224","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":96,"character":1},"end":{"line":96,"character":2}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"225","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"225","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":65}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3726

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":66},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":15,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"226","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":20}}}
<<<
Content-Length: 286

{"id":"226","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `read`  \n\n---\n→ `uint8_t`  \nRead a byte.  \n\n---\n```cpp\n// In OneWire\npublic: uint8_t read()\n```"},"range":{"end":{"character":21,"line":89},"start":{"character":17,"line":89}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"227","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":19}}}
<<<
Content-Length: 286

{"id":"227","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `read`  \n\n---\n→ `uint8_t`  \nRead a byte.  \n\n---\n```cpp\n// In OneWire\npublic: uint8_t read()\n```"},"range":{"end":{"character":21,"line":89},"start":{"character":17,"line":89}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"228","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":21}}}
<<<
Content-Length: 286

{"id":"228","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `read`  \n\n---\n→ `uint8_t`  \nRead a byte.  \n\n---\n```cpp\n// In OneWire\npublic: uint8_t read()\n```"},"range":{"end":{"character":21,"line":89},"start":{"character":17,"line":89}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"229","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":0}}}
<<<
Content-Length: 42

{"id":"229","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"230","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":0}}}
<<<
Content-Length: 42

{"id":"230","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"231","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":2}}}
<<<
Content-Length: 255

{"id":"231","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":86},"start":{"character":2,"line":86}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"232","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":5}}}
<<<
Content-Length: 255

{"id":"232","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":86},"start":{"character":2,"line":86}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"233","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":3}}}
<<<
Content-Length: 255

{"id":"233","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":86},"start":{"character":2,"line":86}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"234","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":0}}}
<<<
Content-Length: 42

{"id":"234","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"235","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":2}}}
<<<
Content-Length: 255

{"id":"235","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":85},"start":{"character":2,"line":85}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"236","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":2}}}
<<<
Content-Length: 255

{"id":"236","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":85},"start":{"character":2,"line":85}}}}
>>>
Content-Length: 260

{"jsonrpc":"2.0","id":"237","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":2}}}
<<<
Content-Length: 1621

{"id":"237","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":19},"start":{"character":2,"line":19}}},{"kind":1,"range":{"end":{"character":12,"line":57},"start":{"character":6,"line":57}}},{"kind":1,"range":{"end":{"character":12,"line":61},"start":{"character":6,"line":61}}},{"kind":1,"range":{"end":{"character":12,"line":65},"start":{"character":6,"line":65}}},{"kind":1,"range":{"end":{"character":12,"line":69},"start":{"character":6,"line":69}}},{"kind":1,"range":{"end":{"character":8,"line":85},"start":{"character":2,"line":85}}},{"kind":1,"range":{"end":{"character":8,"line":86},"start":{"character":2,"line":86}}},{"kind":1,"range":{"end":{"character":8,"line":87},"start":{"character":2,"line":87}}},{"kind":1,"range":{"end":{"character":10,"line":90},"start":{"character":4,"line":90}}},{"kind":1,"range":{"end":{"character":10,"line":91},"start":{"character":4,"line":91}}},{"kind":1,"range":{"end":{"character":8,"line":93},"start":{"character":2,"line":93}}},{"kind":1,"range":{"end":{"character":8,"line":94},"start":{"character":2,"line":94}}},{"kind":1,"range":{"end":{"character":8,"line":95},"start":{"character":2,"line":95}}},{"kind":1,"range":{"end":{"character":8,"line":119},"start":{"character":2,"line":119}}},{"kind":1,"range":{"end":{"character":8,"line":120},"start":{"character":2,"line":120}}},{"kind":1,"range":{"end":{"character":8,"line":121},"start":{"character":2,"line":121}}},{"kind":1,"range":{"end":{"character":8,"line":122},"start":{"character":2,"line":122}}},{"kind":1,"range":{"end":{"character":8,"line":123},"start":{"character":2,"line":123}}}]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"238","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"238","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"239","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":2}}}
<<<
Content-Length: 255

{"id":"239","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":86},"start":{"character":2,"line":86}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"240","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":3}}}
<<<
Content-Length: 255

{"id":"240","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":87},"start":{"character":2,"line":87}}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"241","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"241","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"242","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"242","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":85},"start":{"character":2,"line":85}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":67}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"243","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"243","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"244","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"244","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":85,"character":3},"end":{"line":85,"character":3}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"245","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"245","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":68}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"246","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":4},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"246","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"247","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":85,"character":4},"end":{"line":85,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"247","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"248","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":88,"character":4}}}
<<<
Content-Length: 42

{"id":"248","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"249","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":1}}}
<<<
Content-Length: 42

{"id":"249","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"250","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":2}}}
<<<
Content-Length: 255

{"id":"250","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":86},"start":{"character":2,"line":86}}}}
>>>
Content-Length: 260

{"jsonrpc":"2.0","id":"251","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":2}}}
<<<
Content-Length: 1534

{"id":"251","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":19},"start":{"character":2,"line":19}}},{"kind":1,"range":{"end":{"character":12,"line":57},"start":{"character":6,"line":57}}},{"kind":1,"range":{"end":{"character":12,"line":61},"start":{"character":6,"line":61}}},{"kind":1,"range":{"end":{"character":12,"line":65},"start":{"character":6,"line":65}}},{"kind":1,"range":{"end":{"character":12,"line":69},"start":{"character":6,"line":69}}},{"kind":1,"range":{"end":{"character":8,"line":86},"start":{"character":2,"line":86}}},{"kind":1,"range":{"end":{"character":8,"line":87},"start":{"character":2,"line":87}}},{"kind":1,"range":{"end":{"character":10,"line":90},"start":{"character":4,"line":90}}},{"kind":1,"range":{"end":{"character":10,"line":91},"start":{"character":4,"line":91}}},{"kind":1,"range":{"end":{"character":8,"line":93},"start":{"character":2,"line":93}}},{"kind":1,"range":{"end":{"character":8,"line":94},"start":{"character":2,"line":94}}},{"kind":1,"range":{"end":{"character":8,"line":95},"start":{"character":2,"line":95}}},{"kind":1,"range":{"end":{"character":8,"line":119},"start":{"character":2,"line":119}}},{"kind":1,"range":{"end":{"character":8,"line":120},"start":{"character":2,"line":120}}},{"kind":1,"range":{"end":{"character":8,"line":121},"start":{"character":2,"line":121}}},{"kind":1,"range":{"end":{"character":8,"line":122},"start":{"character":2,"line":122}}},{"kind":1,"range":{"end":{"character":8,"line":123},"start":{"character":2,"line":123}}}]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"252","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":86,"character":2},"end":{"line":86,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"252","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"253","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":3}}}
<<<
Content-Length: 255

{"id":"253","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":87},"start":{"character":2,"line":87}}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"254","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"254","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":86,"character":2},"end":{"line":86,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"255","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"255","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":86},"start":{"character":2,"line":86}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":69}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"256","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"256","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"257","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"257","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":86,"character":3},"end":{"line":86,"character":3}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"258","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"258","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":70}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"259","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":4},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"259","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"260","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":86,"character":4},"end":{"line":86,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"260","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"261","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":2}}}
<<<
Content-Length: 255

{"id":"261","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":87},"start":{"character":2,"line":87}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"262","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":2}}}
<<<
Content-Length: 255

{"id":"262","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":87},"start":{"character":2,"line":87}}}}
>>>
Content-Length: 260

{"jsonrpc":"2.0","id":"263","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":2}}}
<<<
Content-Length: 1447

{"id":"263","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":19},"start":{"character":2,"line":19}}},{"kind":1,"range":{"end":{"character":12,"line":57},"start":{"character":6,"line":57}}},{"kind":1,"range":{"end":{"character":12,"line":61},"start":{"character":6,"line":61}}},{"kind":1,"range":{"end":{"character":12,"line":65},"start":{"character":6,"line":65}}},{"kind":1,"range":{"end":{"character":12,"line":69},"start":{"character":6,"line":69}}},{"kind":1,"range":{"end":{"character":8,"line":87},"start":{"character":2,"line":87}}},{"kind":1,"range":{"end":{"character":10,"line":90},"start":{"character":4,"line":90}}},{"kind":1,"range":{"end":{"character":10,"line":91},"start":{"character":4,"line":91}}},{"kind":1,"range":{"end":{"character":8,"line":93},"start":{"character":2,"line":93}}},{"kind":1,"range":{"end":{"character":8,"line":94},"start":{"character":2,"line":94}}},{"kind":1,"range":{"end":{"character":8,"line":95},"start":{"character":2,"line":95}}},{"kind":1,"range":{"end":{"character":8,"line":119},"start":{"character":2,"line":119}}},{"kind":1,"range":{"end":{"character":8,"line":120},"start":{"character":2,"line":120}}},{"kind":1,"range":{"end":{"character":8,"line":121},"start":{"character":2,"line":121}}},{"kind":1,"range":{"end":{"character":8,"line":122},"start":{"character":2,"line":122}}},{"kind":1,"range":{"end":{"character":8,"line":123},"start":{"character":2,"line":123}}}]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"264","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":1}}}
<<<
Content-Length: 42

{"id":"264","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"265","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"265","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"266","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"266","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"267","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"267","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":87},"start":{"character":1,"line":87}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":71}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"268","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":2},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"268","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"269","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"269","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"270","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"270","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":72}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"271","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"271","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"272","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":87,"character":3},"end":{"line":87,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"272","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"273","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":1}}}
<<<
Content-Length: 42

{"id":"273","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"274","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":0}}}
<<<
Content-Length: 42

{"id":"274","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"275","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":93,"character":0}}}
<<<
Content-Length: 42

{"id":"275","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"276","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"276","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":93,"character":1},"end":{"line":93,"character":1}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"277","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 112

{"id":16,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1076

{"id":"277","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":93},"start":{"character":1,"line":93}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":73}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"278","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":93,"character":2},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"278","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"279","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"279","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":93,"character":2},"end":{"line":93,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"280","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"280","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":74}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"281","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":93,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"281","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"282","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":1}}}
<<<
Content-Length: 42

{"id":"282","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"283","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":93,"character":3},"end":{"line":93,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"283","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"284","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"284","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":94,"character":1},"end":{"line":94,"character":1}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"285","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"285","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":94},"start":{"character":1,"line":94}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":75}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"286","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":2},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"286","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"287","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"287","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"288","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"288","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":76}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"289","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"289","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"290","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":95,"character":2}}}
<<<
Content-Length: 255

{"id":"290","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":95},"start":{"character":2,"line":95}}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"291","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":94,"character":3},"end":{"line":94,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"291","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"292","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":95,"character":0}}}
<<<
Content-Length: 42

{"id":"292","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"293","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"293","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":95,"character":1},"end":{"line":95,"character":1}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"294","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"294","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":95},"start":{"character":1,"line":95}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":77}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"295","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":95,"character":2},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"295","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"296","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"296","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":95,"character":2},"end":{"line":95,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"297","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"297","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":78}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"298","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":95,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"298","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"299","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":95,"character":3},"end":{"line":95,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"299","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"300","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":18}}}
<<<
Content-Length: 286

{"id":"300","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `read`  \n\n---\n→ `uint8_t`  \nRead a byte.  \n\n---\n```cpp\n// In OneWire\npublic: uint8_t read()\n```"},"range":{"end":{"character":21,"line":89},"start":{"character":17,"line":89}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"301","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":19}}}
<<<
Content-Length: 286

{"id":"301","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `read`  \n\n---\n→ `uint8_t`  \nRead a byte.  \n\n---\n```cpp\n// In OneWire\npublic: uint8_t read()\n```"},"range":{"end":{"character":21,"line":89},"start":{"character":17,"line":89}}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"302","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":88,"character":25}}}
<<<
Content-Length: 42

{"id":"302","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3737

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":79},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  //Serial.print(\"  Data = \");\n  //Serial.print(present, HEX);\n //Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n // Serial.print(\" CRC=\");\n // Serial.print(OneWire::crc8(data, 8), HEX);\n // Serial.println();\n \n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":17,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":17,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"303","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":90,"character":5}}}
<<<
Content-Length: 256

{"id":"303","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":10,"line":90},"start":{"character":4,"line":90}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"304","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":4}}}
<<<
Content-Length: 252

{"id":"304","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `data`  \n\n---\nType: `byte[12]`  \n\n---\n```cpp\n// In loop\nbyte data[12]\n```"},"range":{"end":{"character":8,"line":89},"start":{"character":4,"line":89}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"305","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":90,"character":3}}}
<<<
Content-Length: 42

{"id":"305","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"306","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":91,"character":3}}}
<<<
Content-Length: 42

{"id":"306","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"307","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":90,"character":3}}}
<<<
Content-Length: 42

{"id":"307","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"308","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":91,"character":3}}}
<<<
Content-Length: 42

{"id":"308","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"309","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"309","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":95,"character":2},"end":{"line":95,"character":3}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"310","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"310","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":95},"start":{"character":1,"line":95}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":80}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"311","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"311","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":95,"character":1},"end":{"line":95,"character":2}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"312","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"312","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":81}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"313","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":3}}}
<<<
Content-Length: 42

{"id":"313","jsonrpc":"2.0","result":null}
>>>
Content-Length: 260

{"jsonrpc":"2.0","id":"314","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":4}}}
<<<
Content-Length: 40

{"id":"314","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"315","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":94,"character":4},"end":{"line":94,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"315","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"316","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":3}}}
<<<
Content-Length: 42

{"id":"316","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"317","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":2}}}
<<<
Content-Length: 42

{"id":"317","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"318","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":94,"character":3},"end":{"line":94,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"318","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"319","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"319","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"320","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"320","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":94},"start":{"character":1,"line":94}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":82}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"321","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"321","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":94,"character":1},"end":{"line":94,"character":2}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"322","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"322","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":83}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"323","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":94,"character":2}}}
<<<
Content-Length: 255

{"id":"323","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":94},"start":{"character":2,"line":94}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"324","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":93,"character":0}}}
<<<
Content-Length: 42

{"id":"324","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"325","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":93,"character":1},"end":{"line":93,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"325","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"326","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":95,"character":7}}}
<<<
Content-Length: 255

{"id":"326","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":95},"start":{"character":2,"line":95}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"327","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":95,"character":9}}}
<<<
Content-Length: 42

{"id":"327","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"328","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"328","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":93,"character":1},"end":{"line":93,"character":2}},"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"329","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":93},"start":{"character":1,"line":93}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":84}}Content-Length: 1076

{"id":"329","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":93,"character":1},"end":{"line":93,"character":2}},"text":""}]}}
<<<
Content-Length: 112

{"id":18,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":18,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":85}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"330","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":93,"character":10}}}
<<<
Content-Length: 42

{"id":"330","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"331","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":1}}}
<<<
Content-Length: 42

{"id":"331","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"332","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":1}}}
<<<
Content-Length: 42

{"id":"332","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"333","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":1}}}
<<<
Content-Length: 42

{"id":"333","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"334","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"334","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":3}},"text":""}]}}Content-Length: 321

{"jsonrpc":"2.0","id":"335","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"335","jsonrpc":"2.0","result":[]}Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":85},"start":{"character":2,"line":85}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":86}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"336","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"336","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":3}},"text":""}]}}Content-Length: 248

{"jsonrpc":"2.0","id":"337","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":0}}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":87}}Content-Length: 42

{"id":"337","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"338","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"338","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":86,"character":1},"end":{"line":86,"character":2}},"text":""}]}}Content-Length: 248

{"jsonrpc":"2.0","id":"339","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":0}}}
<<<
Content-Length: 42

{"id":"339","jsonrpc":"2.0","result":null}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":88}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"340","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"340","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":86,"character":1},"end":{"line":86,"character":2}},"text":""}]}}
<<<
Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":86},"start":{"character":1,"line":86}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":89}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"341","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":1}}}
<<<
Content-Length: 42

{"id":"341","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"342","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"342","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":86,"character":1},"end":{"line":86,"character":2}},"text":""}]}}Content-Length: 248

{"jsonrpc":"2.0","id":"343","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":0}}}
<<<
Content-Length: 42

{"id":"343","jsonrpc":"2.0","result":null}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":90}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"344","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"344","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":86,"character":1},"end":{"line":86,"character":1}},"text":" "}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"345","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"345","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":91}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"346","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":86,"character":2},"end":{"line":86,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"346","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"347","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":1}}}
<<<
Content-Length: 42

{"id":"347","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"348","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"348","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"349","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":1}}}
<<<
Content-Length: 42

{"id":"349","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"350","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":1}}}
<<<
Content-Length: 42

{"id":"350","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"351","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":0}}}
<<<
Content-Length: 42

{"id":"351","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"352","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":88,"character":0}}}
<<<
Content-Length: 42

{"id":"352","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"353","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":1}}}
<<<
Content-Length: 42

{"id":"353","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"354","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"354","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"355","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":1}}}
<<<
Content-Length: 42

{"id":"355","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"356","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"356","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":2}},"text":""}]}}Content-Length: 248

{"jsonrpc":"2.0","id":"357","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":2}}}
<<<
Content-Length: 112

{"id":19,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":19,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 42

{"id":"357","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"358","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 893

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":87},"start":{"character":1,"line":87}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":92}}Content-Length: 1076

{"id":"358","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":2}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":93}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"359","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":88,"character":4}}}
<<<
Content-Length: 42

{"id":"359","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"360","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":89,"character":7}}}
<<<
Content-Length: 252

{"id":"360","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `data`  \n\n---\nType: `byte[12]`  \n\n---\n```cpp\n// In loop\nbyte data[12]\n```"},"range":{"end":{"character":8,"line":89},"start":{"character":4,"line":89}}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"361","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"361","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"text":" "}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"362","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"362","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":94}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"363","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"363","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"364","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":13}}}
<<<
Content-Length: 42

{"id":"364","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"365","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":13}}}
<<<
Content-Length: 42

{"id":"365","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3726

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":95},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":20,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":20,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"366","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":13}}}
<<<
Content-Length: 42

{"id":"366","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"367","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":12}}}
<<<
Content-Length: 42

{"id":"367","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"368","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":5}}}
<<<
Content-Length: 255

{"id":"368","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":85},"start":{"character":2,"line":85}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"369","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":5}}}
<<<
Content-Length: 255

{"id":"369","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":85},"start":{"character":2,"line":85}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"370","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":87,"character":3}}}
<<<
Content-Length: 255

{"id":"370","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":87},"start":{"character":2,"line":87}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"371","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":1}}}
<<<
Content-Length: 42

{"id":"371","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"372","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":2}}}
<<<
Content-Length: 255

{"id":"372","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":85},"start":{"character":2,"line":85}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"373","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":3}}}
<<<
Content-Length: 255

{"id":"373","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":85},"start":{"character":2,"line":85}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"374","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":91,"character":0}}}
<<<
Content-Length: 42

{"id":"374","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"375","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":92,"character":1}}}
<<<
Content-Length: 42

{"id":"375","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"376","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"376","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":96,"character":1},"end":{"line":96,"character":1}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"377","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"377","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 3243

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'int16_t': expected expression","range":{"end":{"character":9,"line":102},"start":{"character":2,"line":102}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":7,"line":104},"start":{"character":4,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":13,"line":104},"start":{"character":10,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":9,"line":107},"start":{"character":6,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":16,"line":107},"start":{"character":13,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":24,"line":112},"start":{"character":21,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":30,"line":112},"start":{"character":27,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":113},"start":{"character":26,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":113},"start":{"character":32,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":114},"start":{"character":26,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":114},"start":{"character":32,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":22,"line":117},"start":{"character":19,"line":117}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":96}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"378","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"378","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":2}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"379","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"379","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 3436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":96},"start":{"character":2,"line":96}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'int16_t': expected expression","range":{"end":{"character":9,"line":102},"start":{"character":2,"line":102}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":7,"line":104},"start":{"character":4,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":13,"line":104},"start":{"character":10,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":9,"line":107},"start":{"character":6,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":16,"line":107},"start":{"character":13,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":24,"line":112},"start":{"character":21,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":30,"line":112},"start":{"character":27,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":113},"start":{"character":26,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":113},"start":{"character":32,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":114},"start":{"character":26,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":114},"start":{"character":32,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":22,"line":117},"start":{"character":19,"line":117}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":97}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"380","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":96,"character":3},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"380","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"381","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":96,"character":3},"end":{"line":96,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"381","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"382","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":2}}}
<<<
Content-Length: 255

{"id":"382","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class Serial_`  \n\n---\n```cpp\nextern Serial_ Serial\n```"},"range":{"end":{"character":8,"line":85},"start":{"character":2,"line":85}}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"383","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"383","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":84,"character":1},"end":{"line":84,"character":1}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"384","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"384","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 3629

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":2,"line":84},"start":{"character":1,"line":84}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":96},"start":{"character":2,"line":96}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'int16_t': expected expression","range":{"end":{"character":9,"line":102},"start":{"character":2,"line":102}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":7,"line":104},"start":{"character":4,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":13,"line":104},"start":{"character":10,"line":104}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":9,"line":107},"start":{"character":6,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":16,"line":107},"start":{"character":13,"line":107}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":24,"line":112},"start":{"character":21,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":30,"line":112},"start":{"character":27,"line":112}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":113},"start":{"character":26,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":113},"start":{"character":32,"line":113}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":29,"line":114},"start":{"character":26,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":35,"line":114},"start":{"character":32,"line":114}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'raw'","range":{"end":{"character":22,"line":117},"start":{"character":19,"line":117}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":98}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"385","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":84,"character":2},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"385","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"386","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":85,"character":2}}}
<<<
Content-Length: 42

{"id":"386","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"387","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":84,"character":2},"end":{"line":84,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"387","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"388","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"388","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":84,"character":2},"end":{"line":84,"character":2}},"text":"*"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"389","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"389","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":99}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"390","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":86,"character":5}}}
<<<
Content-Length: 42

{"id":"390","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"391","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":84,"character":3},"end":{"line":84,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"391","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3731

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":100},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n /*\n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n */\n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":21,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":21,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 250

{"jsonrpc":"2.0","id":"392","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":115,"character":31}}}
<<<
Content-Length: 42

{"id":"392","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"393","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":83,"character":31}}}
<<<
Content-Length: 42

{"id":"393","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"394","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":83,"character":30}}}
<<<
Content-Length: 42

{"id":"394","jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"jsonrpc":"2.0","id":"395","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":69,"character":12}}}
<<<
Content-Length: 923

{"id":"395","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":19},"start":{"character":2,"line":19}}},{"kind":1,"range":{"end":{"character":12,"line":57},"start":{"character":6,"line":57}}},{"kind":1,"range":{"end":{"character":12,"line":61},"start":{"character":6,"line":61}}},{"kind":1,"range":{"end":{"character":12,"line":65},"start":{"character":6,"line":65}}},{"kind":1,"range":{"end":{"character":12,"line":69},"start":{"character":6,"line":69}}},{"kind":1,"range":{"end":{"character":8,"line":119},"start":{"character":2,"line":119}}},{"kind":1,"range":{"end":{"character":8,"line":120},"start":{"character":2,"line":120}}},{"kind":1,"range":{"end":{"character":8,"line":121},"start":{"character":2,"line":121}}},{"kind":1,"range":{"end":{"character":8,"line":122},"start":{"character":2,"line":122}}},{"kind":1,"range":{"end":{"character":8,"line":123},"start":{"character":2,"line":123}}}]}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":"396","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":69,"character":12},"end":{"line":69,"character":12}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"396","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"397","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":25}}}
<<<
Content-Length: 42

{"id":"397","jsonrpc":"2.0","result":null}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":"398","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":22,"character":17},"end":{"line":22,"character":17}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"398","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"399","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":8,"character":8}}}
<<<
Content-Length: 183

{"id":"399","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"400","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":19}}}
<<<
Content-Length: 42

{"id":"400","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"401","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":40}}}
<<<
Content-Length: 42

{"id":"401","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"402","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"402","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 329

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":0}},"text":"\r\n"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"403","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"403","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":11,"line":12},"start":{"character":9,"line":12}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"404","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"404","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":11,"line":12},"start":{"character":9,"line":12}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 329

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"text":"\r\n"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"405","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"405","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":11,"line":13},"start":{"character":9,"line":13}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":126},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":101}}Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":102}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"406","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"406","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":11,"line":13},"start":{"character":9,"line":13}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":126},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 670

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"text":"// Чтение данных с температурных датчиков типа 1-Wire: DS18S20, DS18B20, DS1822\r\n//\r\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\r\n//\r\n// Библиотека DallasTemperature может сделать это все за вас!\r\n// http://milesburton.com/Dallas_Temperature_Control_Library"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"407","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"407","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":11,"line":18},"start":{"character":9,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":27},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":10,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":9,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":"408","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":16,"character":60},"end":{"line":16,"character":60}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":103}}Content-Length: 40

{"id":"408","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"409","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":21}}}
<<<
Content-Length: 42

{"id":"409","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 4070

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":104},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n// Чтение данных с температурных датчиков типа 1-Wire: DS18S20, DS18B20, DS1822\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// Библиотека DallasTemperature может сделать это все за вас!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 19 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 23 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 19 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n /*\n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n */\n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":22,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":22,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":104}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"410","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"410","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":11,"line":18},"start":{"character":9,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":27},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":10,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":9,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 329

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":0}},"text":"\r\n"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"411","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"411","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":11,"line":19},"start":{"character":9,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":10,"line":22},"start":{"character":5,"line":22}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":10,"line":26},"start":{"character":5,"line":26}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":132},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"412","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"412","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":11,"line":19},"start":{"character":9,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":10,"line":22},"start":{"character":5,"line":22}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":10,"line":26},"start":{"character":5,"line":26}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":132},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 329

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"text":"\r\n"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"413","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"413","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":105}}Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":106}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"414","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"414","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"415","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 870

{"id":"415","jsonrpc":"2.0","result":[{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"416","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":1},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"416","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"417","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 870

{"id":"417","jsonrpc":"2.0","result":[{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":11,"character":1},"end":{"line":11,"character":1}},"text":"/"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"418","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"418","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":"419","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":2},"context":{"triggerKind":2,"triggerCharacter":"/"}}}
<<<
Content-Length: 71

{"id":"419","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}Content-Length: 2140

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":11}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ds'","range":{"end":{"character":4,"line":82},"start":{"character":2,"line":82}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ds'","range":{"end":{"character":4,"line":83},"start":{"character":2,"line":83}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ds'","range":{"end":{"character":4,"line":84},"start":{"character":2,"line":84}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ds'","range":{"end":{"character":14,"line":90},"start":{"character":12,"line":90}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ds'","range":{"end":{"character":4,"line":91},"start":{"character":2,"line":91}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ds'","range":{"end":{"character":4,"line":92},"start":{"character":2,"line":92}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":107}}Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":108}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"420","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"420","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"421","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"421","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":2}},"text":"https://wikihandbk.com/wiki/Arduino:%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B/DS18x20_Temperature"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":"422","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"422","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":109}}
>>>
Content-Length: 325

{"jsonrpc":"2.0","id":"423","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":100},"end":{"line":11,"character":100}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"423","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"424","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"424","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 4174

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":110},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n//https://wikihandbk.com/wiki/Arduino:%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B/DS18x20_Temperature\n\n// Чтение данных с температурных датчиков типа 1-Wire: DS18S20, DS18B20, DS1822\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// Библиотека DallasTemperature может сделать это все за вас!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 25 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n /*\n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n */\n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":23,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":23,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":110}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"425","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":25}}}
<<<
Content-Length: 42

{"id":"425","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"426","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":2}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"426","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"427","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":20}}}
<<<
Content-Length: 42

{"id":"427","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"428","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":20,"character":1}}}
<<<
Content-Length: 216

{"id":"428","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":7,"line":20},"start":{"character":0,"line":20}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"429","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":20,"character":0}}}
<<<
Content-Length: 216

{"id":"429","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":7,"line":20},"start":{"character":0,"line":20}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"430","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":20,"character":1}}}
<<<
Content-Length: 216

{"id":"430","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":7,"line":20},"start":{"character":0,"line":20}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"431","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":20,"character":0}}}
<<<
Content-Length: 216

{"id":"431","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":7,"line":20},"start":{"character":0,"line":20}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"432","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":21,"character":1}}}
<<<
Content-Length: 42

{"id":"432","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"433","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":20,"character":0}}}
<<<
Content-Length: 216

{"id":"433","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":7,"line":20},"start":{"character":0,"line":20}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"434","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":20,"character":0}}}
<<<
Content-Length: 216

{"id":"434","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":7,"line":20},"start":{"character":0,"line":20}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"435","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":20,"character":0}}}
<<<
Content-Length: 216

{"id":"435","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `OneWire`  \n\n---\n```cpp\nclass OneWire {}\n```"},"range":{"end":{"character":7,"line":20},"start":{"character":0,"line":20}}}}
>>>
Content-Length: 260

{"jsonrpc":"2.0","id":"436","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":20,"character":0}}}
<<<
Content-Length: 126

{"id":"436","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":7,"line":20},"start":{"character":0,"line":20}}}]}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"437","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":20,"character":0},"end":{"line":134,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"437","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"438","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"438","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"439","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"439","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":"440","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":129,"character":1},"end":{"line":129,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"440","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 250

{"jsonrpc":"2.0","id":"441","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":126,"character":40}}}
<<<
Content-Length: 42

{"id":"441","jsonrpc":"2.0","result":null}
>>>
Content-Length: 250

{"jsonrpc":"2.0","id":"442","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":126,"character":40}}}
<<<
Content-Length: 42

{"id":"442","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 4174

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":111},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n//https://wikihandbk.com/wiki/Arduino:%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B/DS18x20_Temperature\n\n// Чтение данных с температурных датчиков типа 1-Wire: DS18S20, DS18B20, DS1822\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// Библиотека DallasTemperature может сделать это все за вас!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 25 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n /*\n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n */\n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":24,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":24,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"443","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":15,"character":30}}}
<<<
Content-Length: 42

{"id":"443","jsonrpc":"2.0","result":null}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":"444","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1076

{"id":"444","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":133},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 323

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}},"text":""}]}}Content-Length: 249

{"jsonrpc":"2.0","id":"445","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":25}}}
<<<
Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":112}}Content-Length: 42

{"id":"445","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"446","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":8,"character":22}}}
<<<
Content-Length: 213

{"id":"446","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `DallasTemperature.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\DallasTemperature.h\n```"}}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 4172

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":113},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n//https://wikihandbk.com/wiki/Arduino:%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B/DS18x20_Temperature\n\n// Чтение данных с температурных датчиков типа 1-Wire: DS18S20, DS18B20, DS1822\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// Библиотека DallasTemperature может сделать это все за вас!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 24 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n /*\n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n */\n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 701

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":113}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"447","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":17}}}
<<<
Content-Length: 42

{"id":"447","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 4172

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":114},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n//https://wikihandbk.com/wiki/Arduino:%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B/DS18x20_Temperature\n\n// Чтение данных с температурных датчиков типа 1-Wire: DS18S20, DS18B20, DS1822\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// Библиотека DallasTemperature может сделать это все за вас!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 24 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n /*\n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n */\n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":25,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":25,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"448","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":16}}}
<<<
Content-Length: 42

{"id":"448","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 4172

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":115},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n//https://wikihandbk.com/wiki/Arduino:%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B/DS18x20_Temperature\n\n// Чтение данных с температурных датчиков типа 1-Wire: DS18S20, DS18B20, DS1822\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// Библиотека DallasTemperature может сделать это все за вас!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 24 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n\n   /*\n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   */\n/*\n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n */\n/*\n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  */\n\n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n /*\n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n */\n\n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 112

{"id":26,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":26,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"449","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":57}}}
<<<
Content-Length: 42

{"id":"449","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"450","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":19,"character":55}}}
<<<
Content-Length: 42

{"id":"450","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"451","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":18}}}
<<<
Content-Length: 42

{"id":"451","jsonrpc":"2.0","result":null}