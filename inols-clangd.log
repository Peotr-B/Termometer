






Started logging.

>>>
Content-Length: 3102

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":21140,"clientInfo":{"name":"vscode","version":"1.80.0"},"rootPath":"C:\\Users\\рс\\AppData\\Local\\Temp\\arduino-language-server3413025801\\build\\sketch","rootUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Arduino_GitHub/Termometer","name":"Termometer"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1101

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}}}Content-Length: 317

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/.clangd"}}Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 1106

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'OneWire'","range":{"end":{"character":7,"line":13},"start":{"character":0,"line":13}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'DallasTemperature'","range":{"end":{"character":17,"line":14},"start":{"character":0,"line":14}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 218

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1282

{"id":"3","jsonrpc":"2.0","result":[{"detail":"int","kind":13,"name":"oneWire","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}},{"detail":"int","kind":13,"name":"sensors","range":{"end":{"character":25,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":25,"line":14},"start":{"character":18,"line":14}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 218

{"jsonrpc":"2.0","id":"4","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1282

{"id":"4","jsonrpc":"2.0","result":[{"detail":"int","kind":13,"name":"oneWire","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}},{"detail":"int","kind":13,"name":"sensors","range":{"end":{"character":25,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":25,"line":14},"start":{"character":18,"line":14}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":"5","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"5","jsonrpc":"2.0","result":[]}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"}}}Content-Length: 1105

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}]}}Content-Length: 247

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"position":{"line":28,"character":42}}}
<<<
Content-Length: 40

{"id":"6","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":24}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3413025801/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":24}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 60

{"jsonrpc":"2.0","id":"9","method":"shutdown","params":null}
<<<
Content-Length: 40

{"id":"9","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3102

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":21140,"clientInfo":{"name":"vscode","version":"1.80.0"},"rootPath":"C:\\Users\\рс\\AppData\\Local\\Temp\\arduino-language-server3399030946\\build\\sketch","rootUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Arduino_GitHub/Termometer","name":"Termometer"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1101

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}}}Content-Length: 317

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/.clangd"}}Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 699

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":19}}}
<<<
Content-Length: 226

{"id":"3","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ONE_WIRE_BUS`  \n\n---\n```cpp\n#define ONE_WIRE_BUS 2\n```"},"range":{"end":{"character":20,"line":11},"start":{"character":8,"line":11}}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":11}}}
<<<
Content-Length: 211

{"id":"4","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `DallasTemperature.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\DallasTemperature.h\n```"}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":26}}}
<<<
Content-Length: 227

{"id":"5","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ONE_WIRE_BUS`  \n\n---\n```cpp\n#define ONE_WIRE_BUS 2\n```"},"range":{"end":{"character":28,"line":13},"start":{"character":16,"line":13}}}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"}}}Content-Length: 1105

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}]}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":20}}}
<<<
Content-Length: 227

{"id":"6","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ONE_WIRE_BUS`  \n\n---\n```cpp\n#define ONE_WIRE_BUS 2\n```"},"range":{"end":{"character":28,"line":13},"start":{"character":16,"line":13}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":21}}}
<<<
Content-Length: 227

{"id":"7","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `ONE_WIRE_BUS`  \n\n---\n```cpp\n#define ONE_WIRE_BUS 2\n```"},"range":{"end":{"character":28,"line":13},"start":{"character":16,"line":13}}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":3,"character":3}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":2,"character":0}}}
<<<
Content-Length: 40

{"id":"9","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":2,"character":0}}}
<<<
Content-Length: 41

{"id":"10","jsonrpc":"2.0","result":null}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"11","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":35,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"11","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"12","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"12","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":29,"character":20}}}
<<<
Content-Length: 41

{"id":"13","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":19}}}
<<<
Content-Length: 292

{"id":"14","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `temperatureC`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat temperatureC = sensors.getTempCByIndex(0)\n```"},"range":{"end":{"character":27,"line":30},"start":{"character":15,"line":30}}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":17}}}
<<<
Content-Length: 292

{"id":"15","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `temperatureC`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat temperatureC = sensors.getTempCByIndex(0)\n```"},"range":{"end":{"character":27,"line":30},"start":{"character":15,"line":30}}}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"16","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":26,"character":13},"end":{"line":26,"character":13}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"16","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"17","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":24,"character":1},"end":{"line":24,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"17","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"18","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":9,"character":18}}}
<<<
Content-Length: 212

{"id":"18","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `DallasTemperature.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\DallasTemperature.h\n```"}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"19","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":2,"character":0}}}
<<<
Content-Length: 41

{"id":"19","jsonrpc":"2.0","result":null}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"20","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":35,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"20","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"21","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"21","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"22","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":29,"character":13}}}
<<<
Content-Length: 41

{"id":"22","jsonrpc":"2.0","result":null}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"23","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":13}}}
<<<
Content-Length: 41

{"id":"23","jsonrpc":"2.0","result":null}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"24","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server3399030946/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":32,"character":14},"end":{"line":32,"character":14}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"24","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 61

{"jsonrpc":"2.0","id":"25","method":"shutdown","params":null}
<<<
Content-Length: 41

{"id":"25","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3100

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":33868,"clientInfo":{"name":"vscode","version":"1.80.0"},"rootPath":"C:\\Users\\рс\\AppData\\Local\\Temp\\arduino-language-server126403308\\build\\sketch","rootUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Arduino_GitHub/Termometer","name":"Termometer"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1100

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}}}Content-Length: 320

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":32,"character":14},"end":{"line":32,"character":14}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/.clangd"}}Content-Length: 192

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 698

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 258

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":25}}}
<<<
Content-Length: 38

{"id":"3","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":"4","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":12,"character":25},"end":{"line":12,"character":25}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"4","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":21,"character":16}}}
<<<
Content-Length: 40

{"id":"5","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":16,"character":16}}}
<<<
Content-Length: 40

{"id":"6","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":26}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":27}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":8,"character":12}}}
<<<
Content-Length: 181

{"id":"9","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":8,"character":0}}}
<<<
Content-Length: 182

{"id":"10","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 245

{"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":8,"character":1}}}
<<<
Content-Length: 182

{"id":"11","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":2}}}
<<<
Content-Length: 41

{"id":"12","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":3}}}
<<<
Content-Length: 41

{"id":"13","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":0}}}
<<<
Content-Length: 41

{"id":"14","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":0}}}
<<<
Content-Length: 41

{"id":"15","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":1}}}
<<<
Content-Length: 41

{"id":"16","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"17","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":15,"character":7}}}
<<<
Content-Length: 41

{"id":"17","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"18","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":15,"character":8}}}
<<<
Content-Length: 41

{"id":"18","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"19","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":15,"character":6}}}
<<<
Content-Length: 41

{"id":"19","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"20","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":0}}}
<<<
Content-Length: 41

{"id":"20","jsonrpc":"2.0","result":null}
>>>
Content-Length: 246

{"jsonrpc":"2.0","id":"21","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":10,"character":0}}}
<<<
Content-Length: 41

{"id":"21","jsonrpc":"2.0","result":null}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"22","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":10,"character":0},"end":{"line":29,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"22","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","id":"23","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":10,"character":0},"end":{"line":28,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"23","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"24","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server126403308/build/sketch/Termometer.ino.cpp"},"position":{"line":22,"character":12}}}
<<<
Content-Length: 311

{"id":"24","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long`\n\n---\n```cpp\n// In Serial_\npublic: void begin(unsigned long)\n```"},"range":{"end":{"character":14,"line":22},"start":{"character":9,"line":22}}}}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

>>>
Content-Length: 3102

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":33868,"clientInfo":{"name":"vscode","version":"1.80.0"},"rootPath":"C:\\Users\\рс\\AppData\\Local\\Temp\\arduino-language-server2510331829\\build\\sketch","rootUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/Arduino_GitHub/Termometer","name":"Termometer"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1101

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(\u0026oneWire);\n\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup();\n#line 20 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop();\n#line 15 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup() {\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop() {\n  sensors.requestTemperatures();\n  float temperatureC = sensors.getTempCByIndex(0);\n  Serial.print(\"Temperature: \");\n  Serial.print(temperatureC);\n  Serial.println(\" °C\");\n  delay(1000);\n}\n\n\n"}}}Content-Length: 319

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/.clangd"}}Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 699

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":18}}}
<<<
Content-Length: 291

{"id":"3","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `temperatureC`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat temperatureC = sensors.getTempCByIndex(0)\n```"},"range":{"end":{"character":27,"line":30},"start":{"character":15,"line":30}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":29}}}
<<<
Content-Length: 40

{"id":"4","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":27}}}
<<<
Content-Length: 40

{"id":"5","jsonrpc":"2.0","result":null}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":30,"character":23}}}
<<<
Content-Length: 291

{"id":"6","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `temperatureC`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In loop\nfloat temperatureC = sensors.getTempCByIndex(0)\n```"},"range":{"end":{"character":27,"line":30},"start":{"character":15,"line":30}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":31,"character":21}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":31,"character":22}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":31,"character":22}}}
<<<
Content-Length: 40

{"id":"9","jsonrpc":"2.0","result":null}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"10","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1301

{"id":"10","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"oneWire","range":{"end":{"character":29,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}},{"detail":"DallasTemperature","kind":13,"name":"sensors","range":{"end":{"character":35,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":25,"line":14},"start":{"character":18,"line":14}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"11","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1301

{"id":"11","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"oneWire","range":{"end":{"character":29,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}},{"detail":"DallasTemperature","kind":13,"name":"sensors","range":{"end":{"character":35,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":25,"line":14},"start":{"character":18,"line":14}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":33},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 3839

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":34,"character":0}},"text":"#include \"OneWire.h\"\r\n \r\n// OneWire DS18S20, DS18B20, DS1822 Temperature Example\r\n//\r\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\r\n//\r\n// The DallasTemperature library can do all this work for you!\r\n// http://milesburton.com/Dallas_Temperature_Control_Library\r\n \r\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\r\n \r\nvoid setup(void) {\r\n  Serial.begin(9600);\r\n}\r\n \r\nvoid loop(void) {\r\n  byte i;\r\n  byte present = 0;\r\n  byte type_s;\r\n  byte data[12];\r\n  byte addr[8];\r\n  float celsius, fahrenheit;\r\n   \r\n  if ( !ds.search(addr)) {\r\n    Serial.println(\"No more addresses.\");\r\n    Serial.println();\r\n    ds.reset_search();\r\n    delay(250);\r\n    return;\r\n  }\r\n   \r\n  Serial.print(\"ROM =\");\r\n  for( i = 0; i \u003c 8; i++) {\r\n    Serial.write(' ');\r\n    Serial.print(addr[i], HEX);\r\n  }\r\n \r\n  if (OneWire::crc8(addr, 7) != addr[7]) {\r\n      Serial.println(\"CRC is not valid!\");\r\n      return;\r\n  }\r\n  Serial.println();\r\n  \r\n  // the first ROM byte indicates which chip\r\n  switch (addr[0]) {\r\n    case 0x10:\r\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\r\n      type_s = 1;\r\n      break;\r\n    case 0x28:\r\n      Serial.println(\"  Chip = DS18B20\");\r\n      type_s = 0;\r\n      break;\r\n    case 0x22:\r\n      Serial.println(\"  Chip = DS1822\");\r\n      type_s = 0;\r\n      break;\r\n    default:\r\n      Serial.println(\"Device is not a DS18x20 family device.\");\r\n      return;\r\n  } \r\n \r\n  ds.reset();\r\n  ds.select(addr);\r\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\r\n   \r\n  delay(1000);     // maybe 750ms is enough, maybe not\r\n  // we might do a ds.depower() here, but the reset will take care of it.\r\n   \r\n  present = ds.reset();\r\n  ds.select(addr);    \r\n  ds.write(0xBE);         // Read Scratchpad\r\n \r\n  Serial.print(\"  Data = \");\r\n  Serial.print(present, HEX);\r\n  Serial.print(\" \");\r\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\r\n    data[i] = ds.read();\r\n    Serial.print(data[i], HEX);\r\n    Serial.print(\" \");\r\n  }\r\n  Serial.print(\" CRC=\");\r\n  Serial.print(OneWire::crc8(data, 8), HEX);\r\n  Serial.println();\r\n \r\n  // Convert the data to actual temperature\r\n  // because the result is a 16 bit signed integer, it should\r\n  // be stored to an \"int16_t\" type, which is always 16 bits\r\n  // even when compiled on a 32 bit processor.\r\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\r\n  if (type_s) {\r\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\r\n    if (data[7] == 0x10) {\r\n      // \"count remain\" gives full 12 bit resolution\r\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\r\n    }\r\n  } else {\r\n    byte cfg = (data[4] \u0026 0x60);\r\n    // at lower res, the low bits are undefined, so let's zero them\r\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\r\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\r\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\r\n    //// default is 12 bit resolution, 750 ms conversion time\r\n  }\r\n  celsius = (float)raw / 16.0;\r\n  fahrenheit = celsius * 1.8 + 32.0;\r\n  Serial.print(\"  Temperature = \");\r\n  Serial.print(celsius);\r\n  Serial.print(\" Celsius, \");\r\n  Serial.print(fahrenheit);\r\n  Serial.println(\" Fahrenheit\");\r\n}\r\nТеги:\r\n\r\n    Arduino Термометр"}]}}
<<<
Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":123},"start":{"character":0,"line":123}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":123},"start":{"character":4,"line":123}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":2}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 4018

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#include \"OneWire.h\"\n \n// OneWire DS18S20, DS18B20, DS1822 Temperature Example\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// The DallasTemperature library can do all this work for you!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n \nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 25 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\nТеги:\n\n    Arduino Термометр\n\n"}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"12","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":3}}Content-Length: 1075

{"id":"12","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":130,"character":3},"end":{"line":130,"character":21}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"13","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"13","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":4}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"14","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"14","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":130,"character":2},"end":{"line":130,"character":3}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"15","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"15","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":5}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"16","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"16","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":130,"character":0},"end":{"line":130,"character":2}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"17","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1075

{"id":"17","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":6}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"18","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"18","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":129,"character":0},"end":{"line":130,"character":0}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"19","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"19","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":7}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"20","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"20","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":128,"character":5},"end":{"line":129,"character":0}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"21","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"21","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":5,"line":128},"start":{"character":4,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":8}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"22","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":128,"character":5},"end":{"line":128,"character":5}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"22","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"23","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"23","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":128,"character":4},"end":{"line":128,"character":5}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"24","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"24","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1103

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Теги'","range":{"end":{"character":4,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":130},"start":{"character":0,"line":130}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":9}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"25","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"25","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":128,"character":3},"end":{"line":128,"character":4}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"26","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"26","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1102

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Тег'","range":{"end":{"character":3,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":130},"start":{"character":0,"line":130}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":10}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"27","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"27","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":128,"character":2},"end":{"line":128,"character":3}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"28","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"28","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1100

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Те'","range":{"end":{"character":2,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":130},"start":{"character":0,"line":130}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":11}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"29","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"29","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":128,"character":1},"end":{"line":128,"character":2}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"30","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"30","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 1098

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Т'","range":{"end":{"character":1,"line":128},"start":{"character":0,"line":128}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":0,"line":130},"start":{"character":0,"line":130}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":12}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"31","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":128,"character":1},"end":{"line":128,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"31","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"32","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"32","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":128,"character":0},"end":{"line":128,"character":1}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"33","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"33","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":13}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"34","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"34","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 326

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":127,"character":1},"end":{"line":128,"character":0}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"35","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"35","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":14}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":"36","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":127,"character":1},"end":{"line":127,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"36","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"37","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":110,"character":34}}}
<<<
Content-Length: 255

{"id":"37","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `data`  \n\n---\nType: `byte[12]`  \n\n---\n```cpp\n// In loop\nbyte data[12]\n```"},"range":{"end":{"character":38,"line":110},"start":{"character":34,"line":110}}}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3972

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":15},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n#include \"OneWire.h\"\n \n// OneWire DS18S20, DS18B20, DS1822 Temperature Example\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// The DallasTemperature library can do all this work for you!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n \nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 25 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 21 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":15}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"38","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":17,"character":53}}}
<<<
Content-Length: 41

{"id":"38","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"39","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":9}}}
<<<
Content-Length: 182

{"id":"39","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"40","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":0}}}
<<<
Content-Length: 182

{"id":"40","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"41","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":19}}}
<<<
Content-Length: 182

{"id":"41","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"42","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":2}}}
<<<
Content-Length: 182

{"id":"42","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"43","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":0}}}
<<<
Content-Length: 182

{"id":"43","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"44","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":0}}}
<<<
Content-Length: 182

{"id":"44","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"45","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":20}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"45","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"46","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"46","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":20}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"47","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"47","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"48","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"48","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":9,"line":20}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":10,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":10,"line":27},"start":{"character":5,"line":27}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":127},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":0}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":16}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"49","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":36}}}
<<<
Content-Length: 41

{"id":"49","jsonrpc":"2.0","result":null}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":17}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"50","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"50","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":11,"line":19},"start":{"character":9,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":10,"line":22},"start":{"character":5,"line":22}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":10,"line":26},"start":{"character":5,"line":26}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":126},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":1}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":18}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"51","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"51","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":11,"line":19},"start":{"character":9,"line":19}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":10,"line":22},"start":{"character":5,"line":22}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":10,"line":26},"start":{"character":5,"line":26}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":126},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":0}},"text":""}]}}Content-Length: 248

{"jsonrpc":"2.0","id":"52","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":12,"character":30}}}
<<<
Content-Length: 41

{"id":"52","jsonrpc":"2.0","result":null}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":19}}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3945

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":20},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\n// OneWire DS18S20, DS18B20, DS1822 Temperature Example\n//\n// http://www.pjrc.com/teensy/td_libs_OneWire.html\n//\n// The DallasTemperature library can do all this work for you!\n// http://milesburton.com/Dallas_Temperature_Control_Library\n \nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 19 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 23 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 19 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":20}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"53","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":14,"character":2}}}
<<<
Content-Length: 41

{"id":"53","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"54","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":0}}}
<<<
Content-Length: 41

{"id":"54","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"55","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":0}}}
<<<
Content-Length: 41

{"id":"55","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"56","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":1}}}
<<<
Content-Length: 41

{"id":"56","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"57","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":13,"character":0}}}
<<<
Content-Length: 41

{"id":"57","jsonrpc":"2.0","result":null}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"58","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":0}}}
<<<
Content-Length: 41

{"id":"58","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","id":"59","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":16,"character":60}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"59","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"60","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"60","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":11,"line":18},"start":{"character":9,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":10,"line":21},"start":{"character":5,"line":21}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":27},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":10,"line":25},"start":{"character":5,"line":25}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":125},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":9,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 325

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":16,"character":60}},"text":""}]}}Content-Length: 219

{"jsonrpc":"2.0","id":"61","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"61","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":11,"line":13},"start":{"character":9,"line":13}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":120},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":21}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"62","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"62","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":11,"line":13},"start":{"character":9,"line":13}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":10,"line":20},"start":{"character":5,"line":20}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":120},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":0}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":22}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"63","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"63","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":11,"line":12},"start":{"character":9,"line":12}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":119},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":1}},"text":""}]}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":23}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"64","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"64","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":11,"line":12},"start":{"character":9,"line":12}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":10,"line":19},"start":{"character":5,"line":19}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":119},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":0}},"text":""}]}}Content-Length: 248

{"jsonrpc":"2.0","id":"65","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":11,"character":17}}}
<<<
Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":24}}Content-Length: 41

{"id":"65","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3699

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":25},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":4,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 700

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"In included file: 'stddef.h' file not found","range":{"end":{"character":10,"line":0},"start":{"character":9,"line":0}},"relatedInformation":[{"location":{"range":{"end":{"character":19,"line":47},"start":{"character":9,"line":47}},"uri":"file:///C:/Users/%D1%80%D1%81/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":25}}
>>>
Content-Length: 248

{"jsonrpc":"2.0","id":"66","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":73,"character":30}}}
<<<
Content-Length: 41

{"id":"66","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"67","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":111,"character":24}}}
<<<
Content-Length: 41

{"id":"67","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"68","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":113,"character":22}}}
<<<
Content-Length: 41

{"id":"68","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"69","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":108,"character":44}}}
<<<
Content-Length: 41

{"id":"69","jsonrpc":"2.0","result":null}
>>>
Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}Content-Length: 3699

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp","version":26},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\n/*1янв25\nТермометр\nПроект 9\nScriptor42\n*/\n\n#include \u003cOneWire.h\u003e\n#include \u003cDallasTemperature.h\u003e\n\nOneWire  ds(10);  // on pin 10 (a 4.7K resistor is necessary)\n \n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void);\n#line 16 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid loop(void);\n#line 12 \"D:\\\\Arduino_GitHub\\\\Termometer\\\\Termometer.ino\"\nvoid setup(void) {\n  Serial.begin(9600);\n}\n \nvoid loop(void) {\n  byte i;\n  byte present = 0;\n  byte type_s;\n  byte data[12];\n  byte addr[8];\n  float celsius, fahrenheit;\n   \n  if ( !ds.search(addr)) {\n    Serial.println(\"No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n   \n  Serial.print(\"ROM =\");\n  for( i = 0; i \u003c 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n \n  if (OneWire::crc8(addr, 7) != addr[7]) {\n      Serial.println(\"CRC is not valid!\");\n      return;\n  }\n  Serial.println();\n  \n  // the first ROM byte indicates which chip\n  switch (addr[0]) {\n    case 0x10:\n      Serial.println(\"  Chip = DS18S20\");  // or old DS1820\n      type_s = 1;\n      break;\n    case 0x28:\n      Serial.println(\"  Chip = DS18B20\");\n      type_s = 0;\n      break;\n    case 0x22:\n      Serial.println(\"  Chip = DS1822\");\n      type_s = 0;\n      break;\n    default:\n      Serial.println(\"Device is not a DS18x20 family device.\");\n      return;\n  } \n \n  ds.reset();\n  ds.select(addr);\n  ds.write(0x44, 1);        // start conversion, with parasite power on at the end\n   \n  delay(1000);     // maybe 750ms is enough, maybe not\n  // we might do a ds.depower() here, but the reset will take care of it.\n   \n  present = ds.reset();\n  ds.select(addr);    \n  ds.write(0xBE);         // Read Scratchpad\n \n  Serial.print(\"  Data = \");\n  Serial.print(present, HEX);\n  Serial.print(\" \");\n  for ( i = 0; i \u003c 9; i++) {           // we need 9 bytes\n    data[i] = ds.read();\n    Serial.print(data[i], HEX);\n    Serial.print(\" \");\n  }\n  Serial.print(\" CRC=\");\n  Serial.print(OneWire::crc8(data, 8), HEX);\n  Serial.println();\n \n  // Convert the data to actual temperature\n  // because the result is a 16 bit signed integer, it should\n  // be stored to an \"int16_t\" type, which is always 16 bits\n  // even when compiled on a 32 bit processor.\n  int16_t raw = (data[1] \u003c\u003c 8) | data[0];\n  if (type_s) {\n    raw = raw \u003c\u003c 3; // 9 bit resolution default\n    if (data[7] == 0x10) {\n      // \"count remain\" gives full 12 bit resolution\n      raw = (raw \u0026 0xFFF0) + 12 - data[6];\n    }\n  } else {\n    byte cfg = (data[4] \u0026 0x60);\n    // at lower res, the low bits are undefined, so let's zero them\n    if (cfg == 0x00) raw = raw \u0026 ~7;  // 9 bit resolution, 93.75 ms\n    else if (cfg == 0x20) raw = raw \u0026 ~3; // 10 bit res, 187.5 ms\n    else if (cfg == 0x40) raw = raw \u0026 ~1; // 11 bit res, 375 ms\n    //// default is 12 bit resolution, 750 ms conversion time\n  }\n  celsius = (float)raw / 16.0;\n  fahrenheit = celsius * 1.8 + 32.0;\n  Serial.print(\"  Temperature = \");\n  Serial.print(celsius);\n  Serial.print(\" Celsius, \");\n  Serial.print(fahrenheit);\n  Serial.println(\" Fahrenheit\");\n}\n"}]}}
<<<
Content-Length: 111

{"id":5,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":"70","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"}}}
<<<
Content-Length: 1075

{"id":"70","jsonrpc":"2.0","result":[{"detail":"OneWire","kind":13,"name":"ds","range":{"end":{"character":15,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":11,"line":11},"start":{"character":9,"line":11}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":16,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":15,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":118},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","id":"71","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"range":{"start":{"line":115,"character":29},"end":{"line":115,"character":29}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"71","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"72","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":108,"character":57}}}
<<<
Content-Length: 41

{"id":"72","jsonrpc":"2.0","result":null}
>>>
Content-Length: 249

{"jsonrpc":"2.0","id":"73","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/Temp/arduino-language-server2510331829/build/sketch/Termometer.ino.cpp"},"position":{"line":105,"character":65}}}
<<<
Content-Length: 41

{"id":"73","jsonrpc":"2.0","result":null}